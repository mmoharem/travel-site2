1-npm install jquery

2-$ npm init to creat package.jason

3-$ npm install jquery --save

4-$ npm install normalize.css --save

5-  after deleting node_modules use
 -$ install.

6- install gulp globaly : $npm install gulp-cli --global

7- $npm install gulp --save-dev  //instal gupl

/////////////....GULP.....

1- craet gulpfile.js

2- open the (gulpfile.js) and include the gupl package in the (node-modules)
by addin (var gulp(anyVareName) = require('gulp) )

/////////////....GULP-Wach.....

1- npm install gulp-watch --save-dev

2- add gupl-watch package to (gulpfile.js)
 - $ var watch = require('gupl-watch');

3- End watching by (ctrl + C)


/////////////....POST CSS.....

1- Key Terms.

    a- gulp.src()
    b- gulp.dest()
    c- pipe()

2- creat ( gulp.src() pipe()  gulp.dest() ) in the (gulpfile.js).

3- install gulp-postcss in npm
 - $npm install gulp-postcss --save-dev

4- add postcss package to gulpfile.js
   var postcss = require('gulp-postcss');

5- install (autoprefixer) then include it to gulpfile.js
   npm install autoprefixer --save-dev

6- add .pipe for postcss[autoprefixer]
   .pipe(postcss([autoprefixer]))

7- install (postcss-simple-vars) then include it to gulpfile.js
   npm install postcss-simple-vars --save-dev
   add to the pipe(postcss([[postcss-simple-vars, autoprefixer]]))

8- install (postcss-nested) then include it to gulpfile.js
   npm install postcss-nested --save-dev
   add to the .pipe

9- install (browser-sync) then include it to gulpfile.js
    npm install browser-sync --save-dev
    add to the .pipe

//////////////////////////////.......GULP Eror handling.........

1- edite the styles task by adding.
 - .on('error' , function(errorInfo){
        console.log(errorInfo.toString());
        this.emit('end');
    });

///////////////////////.............SPRIT..FILE....

1- create file sprites.js
2- require sprites.js in gulpfile.js
3- add var gulp in sprites.js
4- $npm install gulp-svg-sprite --save-dev
5- to rename any file using gulp use gulp rename package
 - $npm install gulp-rename --save-dev
 //use [], to add any dependancy to run before the function


 ///////////////..........POSTCSS hexrgba............

 1- npm install postcss-hexrgba --save-dev


 ///////////////..........WEBPACK............

 1- $npm install webpack --save-g // install webpack globaly
 2- creat new file in the project root with name (webpack.config.js)
 3- add this code..

                 module.exports = {
                     entry: "./app/assets/javascript/App.js",
                     output: {
                         path: "./app/temp/javascript",
                         filename: "App.js"
                     }
                 }

4- webpack need an absolute path not a relative path.

 - we use a part of node js called (path)...

            var path = require('path')
            module.exports = {
                entry: "./app/assets/javascript/App.js",
                output: {
                    path: path.resolve(__dirname, "./app/temp/javascript") ,
                    filename: "App.js"
                }
            }

 5- add the new path <script src="/temp/javascript/App.js"></script> to index.html

 6- add {{..  module.exports = person;  ..}} in the persons.js files

 7- //run webpack $webpack
